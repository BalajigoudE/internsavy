# -*- coding: utf-8 -*-
"""internsavytask1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ExJN_vZnfbDkk8mPrKZDrajQIZcSJD_x
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
import scipy as sp
import warnings
import datetime
warnings.filterwarnings("ignore")
# %matplotlib inline

df=pd.read_csv("Admission_Predict.csv")
df.head()

df.shape
df.describe()

df.isnull().sum().sum()
df.info()

df.isnull().sum()
df.isnull().any()

from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder

x = df.drop('Chance of Admit ',axis=1)
y = df['Chance of Admit ']

from sklearn.model_selection import train_test_split

xtrain, xtest, ytrain, ytest = train_test_split(
    x, y, test_size=0.25, random_state=0)

from sklearn.preprocessing import StandardScaler

sc_x = StandardScaler()
xtrain = sc_x.fit_transform(xtrain)
xtest = sc_x.transform(xtest)

from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
ytrain = label_encoder.fit_transform(ytrain)
ytest = label_encoder.transform(ytest)


# Create and train the Logistic Regression classifier
classifier = LogisticRegression(random_state=0)
classifier.fit(xtrain, ytrain)

ypred = classifier.predict(xtest)

from sklearn.metrics import mean_squared_error,mean_absolute_error
mean_squared_error(ytest,ypred)

model = LogisticRegression()
model.fit(xtrain, ytrain)

# Evaluate the model
accuracy = model.score(xtest, ytest) * 100
print(f"Accuracy: {accuracy}%")